---
import Image from '@components/Image.astro'
import type { Features } from '@/types'
import Figure from './Figure.astro'
import TheFeatures from './TheFeatures.astro'

type Props = {
  name: string
  slug: string
  ctaText?: string
  ctaLink?: string
  featuresTitle?: string
  features: Features
  shrink?: boolean
  posts: {
    title: string
    slug: string
    cover: {
      image: string
      alternativeText: string
    }
  }[]
}

const category = Astro.props
---

<section
  id={category?.slug}
  class='flex flex-col flex-wrap gap-10 lg:flex-row lg:items-center lg:gap-12'
>
  <div
    class='flex flex-col flex-wrap gap-4 lg:flex-row lg:items-center lg:gap-6'
  >
    <h2
      class='order-1 block text-[2rem] font-bold leading-[2.421rem] text-gray-900 lg:mr-auto lg:text-[2.5rem] lg:leading-[3.026rem]'
    >
      {category.name}
    </h2>
    <div
      class='xl:grid-cols-3 order-2 flex flex-col gap-4 lg:order-3 lg:grid lg:grid-cols-2'
    >
      {
        category.posts.map((post, index) => {
          return (
            <a
              href={`/posts/${post.slug}/`}
              class='block'
              class:list={[
                {
                  'lg:hidden':
                    category.shrink &&
                    category.posts.length === 5 &&
                    index === 4,
                  'xl:hidden':
                    category.shrink &&
                    ((category.posts.length === 4 && index === 3) ||
                      (category.posts.length === 5 && [3, 4].includes(index)))
                }
              ]}
            >
              <Figure
                caption={post.title}
                class={'group relative overflow-hidden rounded-lg'}
              >
                <Image
                  src={post.cover.image}
                  alt={post.cover.alternativeText}
                  sizes='600px'
                  class='h-auto w-full rounded-lg transition ease-in group-hover:scale-110'
                  width='600'
                  height='600'
                  loading='lazy'
                  decoding='async'
                />
              </Figure>
            </a>
          )
        })
      }
    </div>
    {
      !!category?.ctaText && (
        <div class='order-3 flex items-center sm:flex sm:justify-center lg:order-2 lg:my-1'>
          <a
            href={`/categorias/${category?.slug}/`}
            class='flex h-12 w-full items-center justify-center rounded-lg border border-gray-900 px-6 py-3 text-center text-gray-900 transition-colors hover:bg-gray-50 focus:border-transparent focus:bg-transparent sm:w-fit'
          >
            {category?.ctaText}
          </a>
        </div>
      )
    }
  </div>
  <TheFeatures title={category.featuresTitle} features={category.features} />
</section>
