---
import { getImageUrl } from '@utils'
import BaseButton from '@components/BaseButton.astro'

const navigation = [
  {
    name: 'ID Visual',
    href: '/categorias/identidade-visual/'
  },
  {
    name: 'Interfaces',
    href: '/categorias/ui-design/'
  }
]

const callToAction = {
  name: 'Contato',
  href: 'https://wa.me/5511965712919'
}
---

<header id='topo' class='block'>
  <div class='fixed top-0 z-20 my-2 w-full'>
    <div class='container'>
      <nav
        class='grid grid-cols-[1fr_40px] flex-wrap gap-x-2 rounded-lg border border-gray-100 bg-white/50 py-3 pl-4 pr-3 backdrop-blur lg:flex lg:flex-row lg:justify-between'
      >
        <a href='/#topo' class='block'>
          <img
            src={getImageUrl(
              'images/icon-pedrohenri.h160.png',
              'f_auto,q_90,h_40'
            )}
            srcset={`${getImageUrl('images/icon-pedrohenri.h160.png', 'f_auto,q_90,h_40')} 1x, 
            ${getImageUrl('images/icon-pedrohenri.h160.png', 'f_auto,q_90,h_60')} 1.5x,
            ${getImageUrl('images/icon-pedrohenri.h160.png', 'f_auto,q_90,h_80')} 2x,
            ${getImageUrl('images/icon-pedrohenri.h160.png', 'f_auto,q_90,h_120')} 3x`}
            alt='Logo Pedro Henri Design'
            width='33.33'
            height='40'
            loading='lazy'
            decoding='async'
          />
        </a>
        <input class='hidden' type='checkbox' id='menu-opened' />
        <label id='menu-button' for='menu-opened'>
          <span class='icon'></span>
        </label>
        <ul id='menu'>
          {
            navigation.map((item) => (
              <li>
                <a class='nav-link' href={item.href}>
                  {item.name}
                </a>
              </li>
            ))
          }
          <li>
            <BaseButton
              href={callToAction.href}
              variant='primary-outline'
              size='sm'
              className='lg:!h-10'
              block
              centered>{callToAction.name}</BaseButton
            >
          </li>
        </ul>
      </nav>
    </div>
  </div>
  <div class='container mt-[5.125rem] gap-y-4'>
    <slot />
  </div>
</header>
<script>
  const fixedNavbar = document.querySelector('#topo nav')

  window.addEventListener('scroll', () => {
    if (window.scrollY > 0) return fixedNavbar?.classList.add('actived')
    return fixedNavbar?.classList.remove('actived')
  })

  const closeMenu = () => {
    const menuOpened = document.getElementById(
      'menu-opened'
    ) as HTMLInputElement
    menuOpened.checked = false
  }
  const menuLinks = Array.from(
    document.querySelectorAll('#menu a')
  ) as HTMLLinkElement[]
  menuLinks.forEach((menuLink) => {
    menuLink.addEventListener('click', () => closeMenu())
  })

  // click outside
  document.addEventListener(
    'click',
    (event) => {
      const target = event.target as HTMLElement
      const menuOpened = document.getElementById(
        'menu-opened'
      ) as HTMLInputElement
      if (
        !target.closest('#menu') &&
        !target.closest('#menu-button') &&
        !target.closest('#menu-opened') &&
        menuOpened.checked
      ) {
        closeMenu()
      }
    },
    false
  )
</script>
<style>
  #menu-button {
    @apply inline-flex h-10 w-10 cursor-pointer select-none items-center justify-center justify-self-end rounded-lg border border-transparent p-2;
    @apply lg:hidden;
  }

  .icon {
    @apply relative block h-[2px] w-[21.33px] rounded-full bg-gray-900 transition-colors ease-out;
  }

  .icon:before,
  .icon:after {
    @apply absolute block h-full w-full rounded-full bg-gray-900 transition-all ease-out content-[''];
  }

  .icon:before {
    @apply top-[8px];
  }

  .icon:after {
    @apply top-[-8px];
  }

  #menu {
    @apply col-span-2 clear-both box-border max-h-0 overflow-hidden transition-max-height duration-200 ease-out will-change-auto;
    @apply lg:flex lg:max-h-fit lg:items-center lg:justify-center lg:gap-x-2 lg:pt-0;
  }

  #menu li:last-of-type {
    @apply mt-2 lg:ml-4 lg:mt-0;
  }
  #menu li:last-of-type a {
    @apply h-10;
  }

  #menu-opened:checked ~ #menu {
    @apply pb-3 pt-4 lg:p-0;
    max-height: fit-content;
  }

  #menu-opened:checked ~ #menu-button .icon {
    background: transparent;
  }

  #menu-opened:checked ~ #menu-button .icon:before {
    top: 0;
    transform: rotate(-45deg);
  }

  #menu-opened:checked ~ #menu-button .icon:after {
    top: 0;
    transform: rotate(45deg);
  }

  .nav-link {
    @apply inline-flex h-12 w-full items-center rounded-lg px-2 font-semibold text-gray-900 transition-colors ease-out hover:bg-gray-900/15;
    @apply lg:h-10 lg:w-fit lg:px-6 lg:py-3;
  }

  #topo nav.actived {
    @apply bg-white/50 backdrop-blur;
  }

  #topo nav:has(#menu-opened:checked) {
    @apply rounded-b-lg bg-white/50 backdrop-blur;
  }
</style>
